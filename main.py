import pickle
import json
import sys
import os

import pandas as pd

from modules.model import RandomForestClassifier, DecisionTreeClassifier, Node, PrintProgress # For model (When Unpickled)
from modules.dataset import get_attributes

if __name__ == '__main__':

    # TODO: Make a basic web interface for this

    FILE_PATH = './tests/inc/main.exe' # './data/test.exe'

    comments = []

    # Check File Exists
    if not os.path.exists(FILE_PATH):
        print('File not found')
        sys.exit()

    # Extract File Attributes
    attributes = get_attributes(FILE_PATH, -1)

    print(attributes)

    sys.exit()

    # Convert to DataFrame
    data = pd.DataFrame(attributes, index=[0])

    # To CSV
    data.to_csv('./data/test.csv', index=False)

    sys.exit()

    # Clean Data
    data = data.drop(['Name', 'Malware', 'MD5'], axis=1).to_numpy()

    # Check if Model Exists
    if not os.path.exists('./build/model_save.pkl'):
        print('Model not found')
        sys.exit()

    # Load Model
    with open('./build/model_save.pkl', 'rb') as f:
        model = pickle.load(f)

    # Predict
    prediction = model.predict(data)

    # TODO: Add a confidence level to the prediction?

    # TODO: Add a check / model for the MD5 hash

    # TODO: Better train the models for higher accuracy

    # Comment on Prediction
    if bool(prediction[0]):
        comments.append('This file may be malicious, run with caution')
    else:
        comments.append('This file is likely safe to run')

    print(bool(prediction[0]))

    # Save Results to Report
    # TODO: Add more information to report
    report = {
        'prediction': bool(prediction[0]),
        'attributes': attributes,
        'comments': comments
    }

    # TODO: Structure report to be more readable

    # Save Report to File
    with open('./data/report.json', 'w', encoding='utf-8') as f:
        json.dump(report, f, indent=4)

    # Print Results
    print('Prediction:', report['comments'][0])